Proje: KiÅŸisel Bilgi YÃ¶netim Sistemi
Proje AÃ§Ä±klamasÄ±: Bu projede, kullanÄ±cÄ±larÄ±n kiÅŸisel bilgilerini (Ã¶rneÄŸin, isim, yaÅŸ, e-posta, adres) girmelerine ve bu bilgileri JSON dosyasÄ± olarak kaydetmelerine izin veren bir sistem geliÅŸtireceÄŸiz. AyrÄ±ca, JSON dosyasÄ±ndan bilgileri okuyabilecek ve yÃ¶netebileceÄŸiz. Bu projede fonksiyonlar, sÄ±nÄ±flar ve dinamik kod yazÄ±mÄ±na dair yeteneklerini geliÅŸtireceksin.

Gereksinimler:

Python (3.x)

JSON modÃ¼lÃ¼ (Python ile birlikte gelir)

AdÄ±m 1: Proje Dosya YapÄ±sÄ±
Projeyi dÃ¼zenlemek iÃ§in aÅŸaÄŸÄ±daki dosya yapÄ±sÄ±nÄ± kullanabiliriz:


Kopyala
personal_info_manager/
â”‚
â”œâ”€â”€ main.py
â”œâ”€â”€ personal_info.py
â””â”€â”€ data/
    â””â”€â”€ personal_info.json
AdÄ±m 2: SÄ±nÄ±flarÄ± ve FonksiyonlarÄ± TanÄ±mlama
personal_info.py dosyasÄ±nÄ± oluÅŸtur ve aÅŸaÄŸÄ±daki kodu ekle:

python

Kopyala
import json
import os

class PersonalInfoManager:
    def __init__(self, file_path):
        self.file_path = file_path

    def load_info(self):
        if os.path.exists(self.file_path):
            with open(self.file_path, 'r') as file:
                return json.load(file)
        else:
        return {}

    def save_info(self, info):
        with open(self.file_path, 'w') as file:
            json.dump(info, file, indent=4)

    def add_info(self, name, age, email, address):
        info = self.load_info()
        info[name] = {
            'age': age,
            'email': email,
            'address': address
        }
        self.save_info(info)
AdÄ±m 3: Ana Program DosyasÄ±
main.py dosyasÄ±nÄ± oluÅŸtur ve aÅŸaÄŸÄ±daki kodu ekle:

python

Kopyala
from personal_info import PersonalInfoManager

def main():
    manager = PersonalInfoManager('data/personal_info.json')

    while True:
        print("\n1. Add Info")
        print("2. View Info")
        print("3. Exit")
        choice = input("Choose an option: ")

        if choice == '1':
            name = input("Enter name: ")
            age = input("Enter age: ")
            email = input("Enter email: ")
            address = input("Enter address: ")

            manager.add_info(name, age, email, address)
            print(f"Info for {name} added.")
        elif choice == '2':
            info = manager.load_info()
            if info:
                for name, details in info.items():
                    print(f"\nName: {name}")
                    print(f"Age: {details['age']}")
                    print(f"Email: {details['email']}")
                    print(f"Address: {details['address']}")
            else:
                print("No information found.")
        elif choice == '3':
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == '__main__':
    main()
AdÄ±m 4: JSON DosyasÄ±
data klasÃ¶rÃ¼nÃ¼n iÃ§ine personal_info.json adÄ±nda boÅŸ bir dosya oluÅŸtur.

AdÄ±m 5: Projeyi Ã‡alÄ±ÅŸtÄ±rma
Terminalde proje klasÃ¶rÃ¼ne giderek main.py dosyasÄ±nÄ± Ã§alÄ±ÅŸtÄ±r:

Dinamik Kod YazÄ±mÄ±: KullanÄ±cÄ±dan alÄ±nan bilgilerle dinamik olarak JSON dosyasÄ± gÃ¼ncellenir.

Fonksiyonlar: Bilgi ekleme, bilgileri yÃ¼kleme ve kaydetme iÅŸlemleri fonksiyonlar ile yapÄ±lÄ±r.

SÄ±nÄ±flar: PersonalInfoManager sÄ±nÄ±fÄ±, yÃ¶netim iÅŸlemlerini dÃ¼zenler.

Bu proje ile Python'da fonksiyonlar ve sÄ±nÄ±flar kullanÄ±mÄ± hakkÄ±nda kendini geliÅŸtirebilir, ayrÄ±ca JSON okuma ve yazma iÅŸlemlerini Ã¶ÄŸrenebilirsin. Kolay gelsin! ğŸš€
